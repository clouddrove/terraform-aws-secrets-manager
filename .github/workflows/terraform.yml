name: 'Terraform GitHub Actions'
on:
  pull_request:
    branches:
      - master

jobs:
  fmt:
    name: 'terraform fmt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Terraform Format'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'fmt'
      - name: 'Terraform Format'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'fmt'

  binary:
    name: 'binary'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Configure AWS for binary'
        uses: clouddrove/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-2

      - name: 'Terraform init for binary'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/binary

      - name: 'Terraform validate for binary'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/binary

      - name: 'Terraform plan for binary'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/binary

  key-value:
    name: 'key-value'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Configure AWS Credentials'
        uses: clouddrove/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-2

      - name: 'Terraform init for key-value'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/key-value

      - name: 'Terraform validate for key-value'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/key-value

      - name: 'Terraform plan for key-value'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/key-value

  plaintext:
    name: 'plaintext'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Configure AWS Credentials'
        uses: clouddrove/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-2

      - name: 'Terraform init for plaintext'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/plaintext

      - name: 'Terraform validate for plaintext'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/plaintext

      - name: 'Terraform plan for plaintext'
        uses: 'clouddrove/github-actions@v8.0'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/plaintext

  pre-commit:
    name: 'Pre-Commit'
    needs:
      - fmt
      - binary
      - key-value
      - plaintext
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Install Tflint'
        run: |
          curl https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: 'Pre-Commit ðŸ”Ž'
        uses: pre-commit/action@v2.0.3
        continue-on-error: true

      - name: 'Slack Notification'
        uses: clouddrove/action-slack@v2
        with:
          status: ${{ job.status }}
          fields: repo,author
          author_name: 'CloudDrove'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TERRAFORM }} # required
        if: always()
